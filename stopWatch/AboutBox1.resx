<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhYABgAPcAAKHI7p3E63mt4YW56zGF1WKc23Ku6H206o297Gmp5kNYp5zG7kuBzEVzuk2Y4JK+
        6Hmy6UyL1ESS3X2x4pC95zpPlJnF7kKR3HGk3VSc4mKl5ZTC7jh5xoG05JHA7VCa4YC26jhqtTiK2FGL
        1rbV8nWs4WSm5oy65mmd27HR8a3O7qDG612i5FOU2aTL8DWI12Si3lmV2TFbo0p0wj+O2nGq4Sp5yS2C
        1Ex8yimA0nWw6Gmk30Z6wWum33Oo34i7632y5EJrsyyC0lqM1UqW38Hb9EFkrIq87FKc4lKD0rnW8lqg
        5ERks5bA6b3Y82yq502E0TqM2Ulqu5rD6kiV3kh8xWGLxUCQ226s5yZ+0VJ2xkaU3abK7ZS/6K3P8FqI
        xX+y42Gg3WWTzG2h3V2d3HWq4KrM7Y6852ub02+k3oa25FSY2o686GOW2YO462mg3KjL7XGt5zyN2m6o
        4KrN70CO25TA6YS25JjC6ylouGKS1y6E1Xqw4lp7t4i45jpirFSQ16bK7qTJ7DaJ167Q8Vie4TZxvYq6
        5keDyoCz5F2h4oi45VqY2oe25Ya35pvE66jM75bB6oq45oO05F2Q10yY34K046jM7TyJ1Xax6DOH1oi7
        7F+Ev5jB6V2Z2kuX36TK7Waa10ZtuIS35k6S2I+/7EmW3zuM2Ym77Ia660V3wJnC6UlgspTA6nuw5Dt/
        y3Wu5aLI7JzD6oq55Ya35rPT8UBSnFqg4kxvwFmc3Iu66J/H75bC6mKk43ir4EyP1lZsqGaj3qPJ7k+U
        2Vqc3KvO7z2O2j2E0G+j2kOM1XOr4Xuv4VBqu0yX35vC6WCi41iH1K/Q8F+O1G+o3yeA0nuz6aXJ61+d
        3JfB6lea21+b20N9yTOD0Ux2x1p1r0pluGeo5j2N2l+k5XCt6JfD7lef46XJ7l+f3XCr5jCE1Ym553On
        309/z46/7UiR2SuB05O/6S+E1F+j5Udmtmuf2SRfqzWE03Ki2Hiv42iX0JfC6oO046bJ7YS15Uh/x0qH
        0CwAAAAAYABgAAAI/wAhQXIhcKCLg8KEAQCwa9eChwssWCBHccMGDxhLlWqHAMGRI5s2pRrppqQbEChR
        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
        DFt1NSAAOw==
</value>
  </data>
</root>